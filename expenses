function doGet() {
  // Membuat UI yang lebih menarik untuk input transaksi
  var app = HtmlService.createHtmlOutput(
    `
    <!DOCTYPE html>
    <html>
    <head>
      <base target="_top">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Catat Transaksi Baru</title>
      <style>
        /* Base Styles */
        html, body {
          height: 100%;
          margin: 0;
          padding: 0;
          overflow: hidden; /* Mencegah scrolling jika gambar lebih besar dari viewport */
        }

        body {
          font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
          /* Background dinamis dari Unsplash */
          background-image: url('https://source.unsplash.com/random/1920x1080/?scenery,landscape,nature');
          background-size: cover; /* Pastikan gambar menutupi seluruh background */
          background-position: center center; /* Pusatkan gambar */
          background-repeat: no-repeat; /* Jangan ulangi gambar */
          position: relative; /* Penting untuk overlay */
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          min-height: 100vh;
          box-sizing: border-box;
          color: #333; /* Warna teks default */
        }

        /* Overlay semi-transparan di atas background gambar */
        body::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.4); /* Lapisan gelap semi-transparan (40% opacity hitam) */
            z-index: -1; /* Tempatkan di belakang konten utama */
        }

        /* Foto Profil */
        .profile-photo {
            width: 90px;
            height: 90px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid rgba(255, 255, 255, 0.7); /* Border lebih transparan */
            box-shadow: 0 6px 15px rgba(0,0,0,0.3); /* Bayangan lebih halus */
            margin-bottom: 10px;
            animation: fadeIn 0.8s ease-out;
        }

        /* Nama Profil */
        .profile-name {
            font-size: 1.5em;
            font-weight: 600;
            color: #ffffff; /* Warna teks putih untuk kontras dengan background gelap overlay */
            text-shadow: 1px 1px 3px rgba(0,0,0,0.3); /* Bayangan teks */
            margin-bottom: 30px; /* Jarak ke form */
            animation: fadeIn 1s ease-out;
        }

        /* Container Utama - GLASSMORPHISM EFFECT */
        .container {
          background-color: rgba(255, 255, 255, 0.15); /* Background transparan */
          backdrop-filter: blur(15px); /* Efek blur utama glassmorphism */
          -webkit-backdrop-filter: blur(15px); /* Untuk kompatibilitas Safari */
          border: 1px solid rgba(255, 255, 255, 0.3); /* Border semi-transparan */
          padding: 55px 40px;
          border-radius: 20px; /* Sudut lebih membulat */
          box-shadow: 0 18px 35px rgba(0, 0, 0, 0.3); /* Bayangan lebih dalam dan menyebar */
          width: 90%; /* Lebar sedikit dikurangi dari 95% agar ada ruang glassmorphism di samping */
          max-width: 600px; /* Max width lebih sempit agar fokus di tengah */
          box-sizing: border-box;
          animation: fadeIn 0.5s ease-out;
          color: #2c3e50; /* Warna teks di dalam container */
        }

        /* Judul Form */
        h2 {
          color: #2c3e50; /* Tetap gelap untuk kontras */
          text-align: center;
          margin-bottom: 50px;
          font-size: 3.8em;
          font-weight: 700;
          text-shadow: 1px 1px 3px rgba(0,0,0,0.1);
        }

        /* Grup Form (Label + Input) */
        .form-group {
          margin-bottom: 40px;
        }

        /* Label Input */
        label {
          display: block;
          margin-bottom: 18px;
          color: #34495e; /* Warna label sedikit lebih gelap */
          font-weight: 600;
          font-size: 1.6em;
        }

        /* Input dan Select Fields */
        input, select {
          width: calc(100% - 36px);
          padding: 24px;
          background-color: rgba(255, 255, 255, 0.7); /* Background input sedikit transparan */
          border: 1px solid rgba(0,0,0,0.1); /* Border lebih halus */
          border-radius: 14px;
          box-sizing: border-box;
          font-size: 1.6em;
          color: #2d3748;
          transition: border-color 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
        }
        input:focus, select:focus {
          outline: none;
          border-color: #3498db;
          box-shadow: 0 0 0 5px rgba(52, 152, 219, 0.25);
          background-color: #ffffff; /* Lebih solid saat fokus */
        }
        select option {
          font-size: 1.5em;
        }
        input::placeholder {
          color: #7f8c8d; /* Warna placeholder lebih keabu-abuan */
          font-size: 1.4em;
        }

        /* Tombol Submit - GRADIENT EFFECT */
        .btn-catat {
          background: linear-gradient(45deg, #2ecc71, #27ae60); /* Gradient hijau */
          color: white;
          padding: 28px 35px;
          border: none;
          border-radius: 14px;
          cursor: pointer;
          font-size: 2em;
          width: 100%;
          font-weight: 700;
          letter-spacing: 0.8px;
          box-shadow: 0 8px 18px rgba(40, 167, 69, 0.4); /* Shadow lebih dalam */
          transition: all 0.3s ease; /* Transisi untuk semua properti */
        }
        .btn-catat:hover {
          background: linear-gradient(45deg, #27ae60, #2ecc71); /* Gradient berubah saat hover */
          transform: translateY(-4px); /* Efek naik lebih tinggi */
          box-shadow: 0 12px 25px rgba(40, 167, 69, 0.5);
        }
        .btn-catat:active {
          transform: translateY(0);
          box-shadow: 0 4px 10px rgba(40, 167, 69, 0.3);
        }

        /* Pesan Notifikasi */
        .message {
          margin-top: 40px;
          padding: 25px;
          border-radius: 14px;
          font-weight: bold;
          text-align: center;
          font-size: 1.5em;
          border: 1px solid transparent;
          color: #2d3748;
        }
        .success {
          background-color: rgba(46, 204, 113, 0.1);
          border-color: rgba(46, 204, 113, 0.3);
        }
        .error {
          background-color: rgba(231, 76, 60, 0.1);
          border-color: rgba(231, 76, 60, 0.3);
        }

        /* Animasi Fade In */
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }

        /* Media Queries for Mobile Screens (untuk tampilan "mentok") */
        @media (max-width: 768px) {
          body {
              padding: 0;
              align-items: stretch;
          }
          .profile-photo {
              width: 75px;
              height: 75px;
              margin-bottom: 8px;
          }
          .profile-name {
              font-size: 1.3em;
              margin-bottom: 20px;
              color: #ffffff;
              text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
          }
          .container {
            width: 100%;
            height: 100%;
            border-radius: 0;
            box-shadow: none;
            padding: 35px 25px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            background-color: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: none;
          }
          h2 {
              font-size: 3em;
              margin-bottom: 40px;
          }
          label {
              font-size: 1.4em;
              margin-bottom: 15px;
          }
          input, select {
              font-size: 1.4em;
              padding: 20px;
              border-radius: 10px;
              background-color: rgba(255, 255, 255, 0.8);
          }
          .btn-catat {
              font-size: 1.7em;
              padding: 22px 30px;
              border-radius: 10px;
              box-shadow: 0 4px 10px rgba(40, 167, 69, 0.3);
          }
          .message {
              font-size: 1.3em;
              padding: 22px;
          }
          .form-group {
              margin-bottom: 30px;
          }
        }

        @media (max-height: 700px) and (max-width: 480px) {
            .profile-photo {
                width: 60px;
                height: 60px;
                margin-bottom: 10px;
            }
            .profile-name {
                font-size: 1.1em;
                margin-bottom: 15px;
            }
            .container {
                padding: 25px 18px;
            }
            h2 {
                font-size: 2.8em;
                margin-bottom: 30px;
            }
            label {
                font-size: 1.2em;
                margin-bottom: 10px;
            }
            input, select {
                font-size: 1.25em;
                padding: 18px;
            }
            .btn-catat {
                font-size: 1.5em;
                padding: 18px 25px;
            }
            .message {
                font-size: 1.15em;
                padding: 18px;
            }
            .form-group {
                margin-bottom: 25px;
            }
        }
      </style>
    </head>
    <body>
      <img src="https://i.imgur.com/53MxoLp.png" alt="Hana Cantikk" class="profile-photo">
      <div class="profile-name">Hana Cantikk</div>

      <div class="container">
        <h2>Catat Transaksi Baru</h2>
        <form id="transactionForm">
          <div class="form-group">
            <label for="tanggal">Tanggal:</label>
            <input type="date" id="tanggal" name="tanggal" required>
          </div>

          <div class="form-group">
            <label for="deskripsi">Deskripsi:</label>
            <input type="text" id="deskripsi" name="deskripsi" placeholder="Contoh: Beli Kopi di Warung" required>
          </div>

          <div class="form-group">
            <label for="kategori">Kategori:</label>
            <select id="kategori" name="kategori" required>
              <option value="">-- Pilih Kategori --</option>
              <option value="Makanan & Minuman">Makanan & Minuman</option>
              <option value="Transportasi">Transportasi</option>
              <option value="Belanja">Belanja</option>
              <option value="Hiburan">Hiburan</option>
              <option value="Tagihan">Tagihan</option>
              <option value="Gaji">Gaji</option>
              <option value="Lain-lain (Pengeluaran)">Lain-lain (Pengeluaran)</option>
              <option value="Lain-lain (Pemasukan)">Lain-lain (Pemasukan)</option>
            </select>
          </div>

          <div class="form-group">
            <label for="jenis">Jenis Transaksi:</label>
            <select id="jenis" name="jenis" onchange="toggleAmountFields()" required>
              <option value="pengeluaran">Pengeluaran</option>
              <option value="pemasukan">Pemasukan</option>
            </select>
          </div>

          <div id="pengeluaranField">
              <div class="form-group">
                  <label for="jumlahPengeluaran">Jumlah Pengeluaran:</label>
                  <input type="number" id="jumlahPengeluaran" name="jumlahPengeluaran" step="0.01" value="0" placeholder="Masukkan Jumlah Pengeluaran">
              </div>
          </div>

          <div id="pemasukanField" style="display:none;">
                  <div class="form-group">
                      <label for="jumlahPemasukan">Jumlah Pemasukan:</label>
                      <input type="number" id="jumlahPemasukan" name="jumlahPemasukan" step="0.01" value="0" placeholder="Masukkan Jumlah Pemasukan">
                  </div>
              </div>

      <button type="submit" class="btn-catat">Catat Transaksi</button>
    </form>
    <div id="message" class="message"></div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', (event) => {
        document.getElementById('tanggal').valueAsDate = new Date(); // Set default date to today

        const form = document.getElementById('transactionForm');
        const messageDiv = document.getElementById('message');
        const pengeluaranField = document.getElementById('pengeluaranField');
        const pemasukanField = document.getElementById('pemasukanField');
        const jumlahPengeluaranInput = document.getElementById('jumlahPengeluaran');
        const jumlahPemasukanInput = document.getElementById('jumlahPemasukan');

        // Function to toggle amount fields based on transaction type
        window.toggleAmountFields = function() {
            const jenis = document.getElementById('jenis').value;
            if (jenis === 'pengeluaran') {
                pengeluaranField.style.display = 'block';
                pemasukanField.style.display = 'none';
                jumlahPengeluaranInput.setAttribute('required', 'required');
                jumlahPemasukanInput.removeAttribute('required');
                jumlahPengeluaranInput.value = 0; // Reset other field
            } else {
                pengeluaranField.style.display = 'none';
                pemasukanField.style.display = 'block';
                jumlahPemasukanInput.setAttribute('required', 'required');
                jumlahPengeluaranInput.removeAttribute('required');
                jumlahPemasukanInput.value = 0; // Reset other field
            }
        }

        form.addEventListener('submit', function(e) {
            e.preventDefault();
            messageDiv.className = 'message';
            messageDiv.textContent = 'Memproses...';

            const formData = new FormData(form);
            const data = {};
            for (let [key, value] of formData.entries()) {
                data[key] = value;
            }

            google.script.run
                .withSuccessHandler(function(response) {
                    if (response.success) {
                        messageDiv.className = 'message success';
                        messageDiv.textContent = response.message;
                        form.reset(); // Clear form fields
                        document.getElementById('tanggal').valueAsDate = new Date(); // Reset date
                        document.getElementById('jenis').value = 'pengeluaran'; // Reset type
                        toggleAmountFields(); // Reset field visibility
                        jumlahPengeluaranInput.value = 0; // Reset amount input
                        jumlahPemasukanInput.value = 0; // Reset amount input
                    } else {
                        messageDiv.className = 'message error';
                        messageDiv.textContent = response.message;
                    }
                })
                .withFailureHandler(function(error) {
                    messageDiv.className = 'message error';
                    messageDiv.textContent = 'Terjadi kesalahan: ' + error.message;
                })
                .recordTransaction(data);
        });
    });
  </script>
</body>
</html>
`
).setTitle('Catat Transaksi').setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
return app;
}

// =========================================================================
// === FUNGSI SERVER-SIDE YANG DI PANGGIL OLEH google.script.run ===
// =========================================================================
function recordTransaction(data) {
Logger.log("recordTransaction dipanggil dengan data: " + JSON.stringify(data));

var ss = SpreadsheetApp.getActiveSpreadsheet();
var sheet = ss.getSheetByName("Transaksi");
if (!sheet) {
Logger.log("ERROR: Sheet 'Transaksi' tidak ditemukan. Mohon cek nama sheet Anda.");
return {success: false, message: "Sheet 'Transaksi' tidak ditemukan. Mohon cek nama sheet Anda."};
}
Logger.log("Sheet 'Transaksi' ditemukan.");

var lastRow = sheet.getLastRow();
var values = [];
if (lastRow > 1) {
var range = sheet.getRange("A2:F" + lastRow);
values = range.getValues();
}
Logger.log("Baris terakhir sheet: " + lastRow + ", Jumlah baris data yang ada: " + values.length);

var currentBalance = 0;
if (lastRow > 1) {
for (var i = values.length - 1; i >= 0; i--) {
if (typeof values[i][5] === 'number' && !isNaN(values[i][5])) {
currentBalance = values[i][5];
break;
} else if (typeof values[i][5] === 'string' && values[i][5].trim() !== '') {
var parsedVal = parseFloat(values[i][5].replace(/[^0-9.-]+/g,""));
if (!isNaN(parsedVal)) {
currentBalance = parsedVal;
break;
}
}
}
}
Logger.log("Saldo saat ini sebelum transaksi baru: " + currentBalance);

var tanggal = new Date(data.tanggal);
var deskripsi = data.deskripsi;
var kategori = data.kategori;
var jumlahPengeluaran = parseFloat(data.jumlahPengeluaran || 0);
var jumlahPemasukan = parseFloat(data.jumlahPemasukan || 0);

if (isNaN(jumlahPengeluaran)) {
Logger.log("WARNING: Jumlah Pengeluaran NaN. Resetting ke 0.");
jumlahPengeluaran = 0;
}
if (isNaN(jumlahPemasukan)) {
Logger.log("WARNING: Jumlah Pemasukan NaN. Resetting ke 0.");
jumlahPemasukan = 0;
}
Logger.log("Jumlah Pengeluaran ter-parsing: " + jumlahPengeluaran + ", Jumlah Pemasukan ter-parsing: " + jumlahPemasukan);

var saldoBaru;
if (data.jenis === 'pengeluaran') {
saldoBaru = currentBalance - jumlahPengeluaran;
jumlahPemasukan = "";
} else {
saldoBaru = currentBalance + jumlahPulasukan;
jumlahPengeluaran = "";
}
Logger.log("Saldo baru yang dihitung: " + saldoBaru);

var formattedTanggal = Utilities.formatDate(tanggal, ss.getSpreadsheetTimeZone(), "dd/MM/yyyy");
Logger.log("Tanggal terformat: " + formattedTanggal);

try {
sheet.appendRow([formattedTanggal, deskripsi, kategori, jumlahPengeluaran, jumlahPemasukan, saldoBaru]);
Logger.log("Baris berhasil ditambahkan.");
return {success: true, message: "Transaksi berhasil dicatat!"};
} catch (e) {
Logger.log("ERROR saat menambahkan baris: " + e.message + " Stack: " + e.stack);
return {success: false, message: "Gagal mencatat transaksi: " + e.message};
}
}
